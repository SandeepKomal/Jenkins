pipeline{

      // agent any	
    agent { label "slave-1"}
    
     environment {
        SONAR_TOKEN =${SONAR_TOKEN_VALUE}     
        AWS_ACCOUNT_ID="######"
        AWS_DEFAULT_REGION="#####"
        IMAGE_NAME="######"
        IMAGE_TAG="${currentBuild.number}"
        //IMAGE_TAG="staticvalue"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG}"
        
                }
    
    stages {
        
        stage("Cloning git repository"){
            steps{
                git branch: 'main', credentialsId: 'git_credentials', url: '############'
            }
        }  

        stage("SonarQube Scan"){
            steps{
               sh "mvn clean verify sonar:sonar -Dsonar.token=dc3ad486e5768160b4ba8f0e3fb6948dd3157616 -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=tcn -Dsonar.projectKey=tcn_customer"
            }    
        }  
        
        stage("Build jar file using maven"){
            steps{
               sh "mvn clean install"
            }    
        }
        
        stage("Build docker image") {
            steps{
                script {
                    dockerImage = docker.build "${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
   
    // Uploading Docker images into AWS ECR
    stage("Logging into AWS ECR and push docker image") {
     steps{  
         script {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}"
                sh "docker push ${REPOSITORY_URI}"
            }
        }
     }  
     
     stage('K8S deploy'){
            steps{
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kube_config', namespace: '', serverUrl: '') {
                 sh "kustomize edit set image ${REPOSITORY_URI} && /home/jenkins-slave1/bin/kubectl apply -k ."
               }
            }
        }
    }
    
}  
