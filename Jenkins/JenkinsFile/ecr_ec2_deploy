pipeline{
       //agent any	
    agent { label 'slave1'}
     environment {
        AWS_ACCOUNT_ID="#######"
        AWS_DEFAULT_REGION="######"
        IMAGE_NAME="#####"
        IMAGE_TAG="${currentBuild.number}"
        CONTAINER_NAME="######"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG}"
    }
    
    stages {
        
        stage("cloning git repository"){
            steps{
                git branch: '######', credentialsId: 'git_credentials', url: '####################'
            }
        } 
        
        stage("Build jar file using maven"){
            steps{
               sh "mvn clean install"
            }    
        }
        
        stage('Building image') {
            steps{
                script {
                    dockerImage = docker.build "${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
   
    // Uploading Docker images into AWS ECR
    stage('Logging into AWS ECR & Push docker image to ECR') {
     steps{  
         script {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"     
                sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}"
                sh "docker push ${REPOSITORY_URI}"
            }
        }
     } 
     
     stage('Pull the latest docker image from ECR repository ') {
        agent { label 'BackendServer'} 
           steps{  
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                    sh "docker stop ${CONTAINER_NAME}"
                    sh "docker rm ${CONTAINER_NAME}"
               }    
           }
        }
   
     stage('Deploy the application'){           
         agent { label 'BackendServer'}  
            steps{ 
               sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
               sh "docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG}"
               sh "docker run -d --name ${CONTAINER_NAME} -p 8081:8081 ${REPOSITORY_URI}"
            }
        }   
    }
}
