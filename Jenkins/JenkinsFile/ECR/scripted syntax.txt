node('jenkins-slave1') {
    def SONAR_TOKEN = "55ca9adc900371b7e9966ca9100ab48026d65e1f"
    def IMAGE_TAG = "${currentBuild.number}"
    def GIT_URL = "https://github.com/SandeepKomal/customer.git"
    def ACCOUNT_ID = "800896686102"
    def REGION = "us-east-1"
    def IMAGE_NAME = "pskp1"
    def REPO_URI = "${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG}"

    stage("Cloning git repository") {
        git branch: 'main', credentialsId: 'git_credentials', url: GIT_URL
    }

    stage("Sonar Qube Scan") {
        sh "mvn clean verify sonar:sonar -Dsonar.token=${SONAR_TOKEN} -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=tektrio -Dsonar.projectKey=tektrio_customer2"
    }

    stage("Build jar file using maven") {
        sh "mvn clean install"
    }

    stage("Build docker image") {
        script {
            dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
        }
    }

    stage("Logging into AWS ECR and push docker image") {
        script {
            sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 800896686102.dkr.ecr.us-east-1.amazonaws.com"
            sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${REPO_URI}"
            sh "docker push ${REPO_URI}"
        }
    }

    stage('K8S deploy') {
        script {
            withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kube_config', namespace: '', serverUrl: '') {
                sh "kustomize edit set image ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${IMAGE_NAME}:44=${REPO_URI} && kubectl apply -k ."
            }
        }
    }
}
