node('slave1') {
    def AWS_ACCOUNT_ID = "637423236688"
    def AWS_DEFAULT_REGION = "us-east-1"
    def IMAGE_NAME = "frontend"
    def REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_NAME}"
    def CREDENTIAL_ID = 'jenkins_cred'
    def GIT_URL = "https://github.com/SandeepKomal/Infra-App-Deployment.git"
    def ECS_CLUSTER = "frontend"
    def ECS_SERVICE = "frontend-svc"
    def TASK_FAMILY="frontend-td"
    // def LATEST_REVISION



    stage('Obtain Build Number') {
        withCredentials([usernamePassword(credentialsId: "${CREDENTIAL_ID}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            def buildNumber = sh(script: "curl -s -u ${USERNAME}:${PASSWORD} 'http://52.70.110.173:8080/job/FE_CI/job/frontend/lastSuccessfulBuild/buildNumber'", returnStdout: true).trim()
            env.buildNumber = buildNumber
            echo "The latest build number of FE_CI is ${buildNumber}"
        }
    }

    stage("Cloning git repository") {
        git branch: 'main', credentialsId: 'git_credentials', url: GIT_URL
    }

    stage('ECS Deploy') {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws_credentials']]) {
            sh """
                aws ecs register-task-definition \
                --network-mode awsvpc \
                --family frontend-td \
                --container-definitions '[{"name":"frontend","image":"${REPOSITORY_URI}:${buildNumber}", "portMappings":[{"containerPort": 80,"hostPort": 80}], "memory":10,"essential":true}]' \
                --requires-compatibilities FARGATE \
                --cpu 256 \
                --memory 512 \
                --execution-role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/ecsTaskExecutionRole
            """
        }
    }
    
       stage('ECS Deploy') {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws_credentials']]) {
            def LATEST_REVISION = sh(script: 'aws ecs describe-task-definition --task-definition frontend-td --query "taskDefinition.revision" --output text', returnStdout: true)
            echo "latest task definition version is ${LATEST_REVISION}"
            sh "aws ecs update-service --cluster frontend --service frontend-svc --task-definition ${TASK_FAMILY}:${LATEST_REVISION}"
        }
    }
}
