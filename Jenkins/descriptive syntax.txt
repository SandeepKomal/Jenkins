pipeline {
    agent {
        label jenkins-slave1
    }

    environment {
        SONAR_TOKEN = b4fecfe44cebdfc65e3a9572c24e67a0db7c4c6d
        IMAGE_TAG = ${currentBuild.number}
        GIT_URL = httpsgithub.comSandeepKomalcustomer.git
        ACCOUNT_ID = 800896686102
        REGION = us-east-1
        IMAGE_NAME = pskp1
        REPO_URI = ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com${IMAGE_NAME}${IMAGE_TAG}
    }

    stages {
        stage(Cloning git repository) {
            steps {
                git branch 'main', credentialsId 'git_credentials', url ${GIT_URL}
            }
        }

        stage(Sonar Qube Scan) {
            steps {
                sh mvn clean verify sonarsonar -Dsonar.token=${SONAR_TOKEN} -Dsonar.host.url=httpssonarcloud.io -Dsonar.organization=tektrio -Dsonar.projectKey=tektrio_customer
            }
        }

        stage(Build jar file using Maven) {
            steps {
                sh mvn clean install
            }
        }

        stage(Build Docker image) {
            steps {
                script {
                    dockerImage = docker.build ${IMAGE_NAME}${IMAGE_TAG}
                }
            }
        }
        stage('Scan docker image') {
            steps {
                sh 'trivy image ${IMAGE_NAME}${IMAGE_TAG}'
            }
        }  

        stage(Logging into AWS ECR and push Docker image) {
            steps {
                script {
                    sh aws ecr get-login-password --region us-east-1  docker login --username AWS --password-stdin 800896686102.dkr.ecr.us-east-1.amazonaws.com
                    sh docker tag ${IMAGE_NAME}${IMAGE_TAG} ${REPO_URI}
                    sh docker push ${REPO_URI}
                }
            }
        }

        stage('K8S deploy') {
            steps {
                withKubeConfig(
                    caCertificate '',
                    clusterName '',
                    contextName '',
                    credentialsId 'kube_config',
                    namespace '',
                    serverUrl ''
                ) {
                    sh kustomize edit set image ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com${IMAGE_NAME}44=${REPO_URI} && kubectl apply -k .
                }
            }
        }
    }
}
